{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovie","isLoading","setLoading","error","setError","fetchMoviesHandler","useCallback","fetch","response","ok","Error","json","data","loadedMovies","push","message","method","body","JSON","stringify","headers","console","log","useEffect","onClick","length","MoviesList","ReactDOM","createRoot","document","getElementById","render"],"mappings":";4HACAA,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,2LCajBC,EAVD,SAACC,GACb,OACE,wBAAIC,UAAWC,IAAQC,OACrB,4BAAKH,EAAMI,OACX,4BAAKJ,EAAMK,aACX,2BAAIL,EAAMM,e,gBCWDC,EAfG,SAACP,GACjB,OACE,wBAAIC,UAAWC,IAAQ,gBACpBF,EAAMQ,OAAOC,KAAI,SAACN,GAAD,OAChB,kBAAC,EAAD,CACEO,IAAKP,EAAMQ,GACXP,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,YAAaH,EAAMG,mB,wBC6BdM,MAtCf,SAAkBZ,GAChB,IAAMa,EAAWC,iBAAO,IAClBC,EAAiBD,iBAAO,IACxBE,EAAiBF,iBAAO,IAgB9B,OACE,0BAAMG,SAfR,SAAuBC,GACrBA,EAAMC,iBAIN,IAAMhB,EAAQ,CACZC,MAAOS,EAASO,QAAQC,MACxBf,YAAaS,EAAeK,QAAQC,MACpChB,YAAaW,EAAeI,QAAQC,OAGtCrB,EAAMsB,WAAWnB,KAKf,yBAAKF,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOd,GAAG,QAAQe,IAAKb,KAErC,yBAAKZ,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,gBAAf,gBACA,8BAAUG,KAAK,IAAIhB,GAAG,eAAee,IAAKX,KAE5C,yBAAKd,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,QAAf,gBACA,2BAAOC,KAAK,OAAOd,GAAG,OAAOe,IAAKV,KAEpC,+C,yyMC0DSY,MAzFf,WAEG,MAAyBC,mBAAS,IAAlC,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAA+BD,oBAAS,GAAxC,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAyBH,mBAAS,MAAlC,mBAAOI,EAAP,KAAcC,EAAd,KAsBGC,EAAqBC,sBAAW,sBAAC,iGACrCJ,GAAW,GACXE,EAAS,MAF4B,kBAGPG,MAAM,4FAHC,WAGzBC,EAHyB,QAKxBC,GALwB,sBAM7B,IAAIC,MAAM,4BANmB,wBAQlBF,EAASG,OARS,QAYrC,IAAU/B,KAJJgC,EAR+B,OAU/BC,EAAe,GAEJD,EACfC,EAAaC,KAAK,CAChBjC,GAAID,EACJN,MAAOsC,EAAKhC,GAAKN,MACjBE,YAAaoC,EAAKhC,GAAKJ,YACvBD,YAAaqC,EAAKhC,GAAKL,cAK3ByB,EAASa,GAtB4B,kDAyBvCT,EAAS,KAAMW,SAzBwB,QA2BrCb,GAAW,GA3B0B,0DA6BrC,IAvDa,4CA2Df,WAA+B7B,GAA/B,yFACyBkC,MAAM,2FAA2F,CACtHS,OAAQ,OACRC,KAAOC,KAAKC,UAAU9C,GACtB+C,QAAS,CACP,eAAgB,sBALtB,cACSZ,EADT,gBAQqBA,EAASG,OAR9B,OAQQC,EARR,OASES,QAAQC,IAAIV,GATd,4CA3De,sBAsEb,OAdFW,qBAAU,WAAKlB,MACf,CAACA,IAcG,oCACA,iCACE,kBAAC,EAAD,CAAUb,WAzED,+CA2ET,iCACE,4BAAQgC,QAASnB,GAAjB,iBAEF,kCACIJ,GAAa5B,EAAMoD,OAAO,GAAK,kBAACC,EAAD,CAAYhD,OAAQL,KACnD4B,GAA4B,IAAf5B,EAAMoD,SAAetB,GAAS,+CAC3CF,GAAaE,GAAS,2BAAIA,GAC3BF,GAAa,qDClFT0B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,kBAAC,EAAD,S","file":"static/js/main.609cbb60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__2ENNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__27rBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__lMnXQ\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='date' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React, {useCallback, useEffect, useState} from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n\n   const [movie, setMovie]= useState([])\n   const [isLoading, setLoading]= useState(false)\n   const [error, setError]= useState(null)\n\n   /*\n  const  fetchMoviesHandler = ()=>{\n  fetch('https://swapi.dev/api/films/').then\n  ((response)=>{\n    return response.json()\n  }).then((data)=>{\n    const tranformedMovies = data.results.map((movieData)=>{\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      }\n    })\n    setMovie(tranformedMovies)\n  \n  })\n}\n*/\n\nconst fetchMoviesHandler = useCallback(async()=>{\n  setLoading(true)\n  setError(null)\n  try { const response =  await fetch('https://firstproject-17898-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json')\n  \n  if(!response.ok){\n    throw new Error('Something went wrong... ')\n  }\n  const data = await response.json();\n\n  const loadedMovies = [];\n\n  for(const key in data){\n    loadedMovies.push({\n      id: key,\n      title: data[key].title,\n      openingText: data[key].openingText,\n      releaseDate: data[key].releaseDate\n    })\n  }\n  \n  \n  setMovie(loadedMovies)\n  }\n  catch(error){\nsetError(error.message)\n  }\n  setLoading(false)\n \n},[]);\nuseEffect(()=>{fetchMoviesHandler()},\n[fetchMoviesHandler])\n\nasync function addMovieHandler(movie){\n   const response= await fetch('https://firstproject-17898-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json',{\n    method: 'POST',\n    body : JSON.stringify(movie),\n    headers: {\n      'Content-Type': 'application/JSON'\n    }\n  });\n  const data = await response.json()\n  console.log(data)\n}\n  return (\n    <>\n    <section>\n      <AddMovie onAddMovie={addMovieHandler}/>\n    </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movie.length>0 && <MoviesList movies={movie}  />}\n        {!isLoading && movie.length===0 && !error && <p>Found No movies</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Data is Loading....</p>}\n      </section>\n    </>\n  );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}